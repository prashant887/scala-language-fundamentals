<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3a192582-9c1d-4d4f-80b4-df658f4468c8" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/scala/packageobject/MainDriver.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/packageobject/package.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="Scala Worksheet" />
        <option value="Package Object" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2X3mN1Gr8gnlmfeSqeujaya1OYz" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/pl/IdeaProjects/scala-language-fundamentals/src/main/scala/classesandobjects&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;scala_project_settings_configurable.last_selected_tab_index&quot;: &quot;3&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.scala.settings.ScalaProjectSettingsConfigurable&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/scala/classesandobjects" />
      <recent name="$PROJECT_DIR$/data" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="packagesandimporting.entities" />
      <recent name="methodsandfunctions" />
    </key>
  </component>
  <component name="RunManager" selected="Application.MainDriver">
    <configuration name="CurrencyConversion" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="gettingstarted.CurrencyConversion" />
      <module name="scala-language-fundamentals" />
      <option name="PROGRAM_PARAMETERS" value="&quot;CAD 100&quot;" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="gettingstarted.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <extension name="software.aws.toolkits.jetbrains.core.execution.JavaAwsConnectionExtension">
        <option name="credential" />
        <option name="region" />
        <option name="useCurrentConnection" value="false" />
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ImplicitConversions" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="gettingstarted.ImplicitConversions" />
      <module name="scala-language-fundamentals" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="gettingstarted.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MainDriver" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="packageobject.MainDriver" />
      <module name="scala-language-fundamentals" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="packageobject.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TypeClass" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="gettingstarted.TypeClass" />
      <module name="scala-language-fundamentals" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="gettingstarted.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DollarsSpec.A Dollar should create a correct Dollar object for number 10 as input" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="scala-language-fundamentals" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="assertions.DollarsSpec" />
      <option name="testName" value="A Dollar should create a correct Dollar object for number 10 as input" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FunctionMockSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="scala-language-fundamentals" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="testClassPath" value="mocking.FunctionMockSpec" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.CurrencyConversion" />
      <item itemvalue="Application.MainDriver" />
      <item itemvalue="Application.ImplicitConversions" />
      <item itemvalue="Application.TypeClass" />
      <item itemvalue="ScalaTest.DollarsSpec.A Dollar should create a correct Dollar object for number 10 as input" />
      <item itemvalue="ScalaTest.FunctionMockSpec" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.MainDriver" />
        <item itemvalue="Application.TypeClass" />
        <item itemvalue="Application.ImplicitConversions" />
        <item itemvalue="ScalaTest.FunctionMockSpec" />
        <item itemvalue="ScalaTest.DollarsSpec.A Dollar should create a correct Dollar object for number 10 as input" />
      </list>
    </recent_temporary>
  </component>
  <component name="ScalaProjectSettings">
    <option name="intInjectionMapping">
      <map>
        <entry key="html" value="HTML" />
        <entry key="java" value="JAVA" />
        <entry key="json" value="JSON" />
        <entry key="json5" value="JSON5" />
        <entry key="protobuf" value="protobuf" />
        <entry key="scala" value="Scala" />
        <entry key="svg" value="SVG" />
        <entry key="xhtml" value="XHTML" />
        <entry key="xml" value="XML" />
        <entry key="xpath" value="XPath" />
        <entry key="yaml" value="yaml" />
      </map>
    </option>
    <option name="scFileMode" value="Ammonite" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3a192582-9c1d-4d4f-80b4-df658f4468c8" name="Changes" comment="" />
      <created>1697866093998</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1697866093998</updated>
    </task>
    <servers />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>